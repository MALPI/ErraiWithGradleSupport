apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

repositories {
	    mavenCentral()
}

dependencies {
	compile 'org.jboss.errai:errai-javaee-all:2.4.0.Final',
			'com.google.gwt:gwt-dev:2.5.1'
}

task compileGwt (dependsOn: classes, type: JavaExec) {
		buildDir = "${project.buildDir}/gwt"
		extraDir = "${project.buildDir}/extra"
		inputs.source sourceSets.main.java.srcDirs
		inputs.dir sourceSets.main.output.resourcesDir
		outputs.dir buildDir
		// Workaround for incremental build (GRADLE-1483)
		outputs.upToDateSpec = new org.gradle.api.specs.AndSpec()
		doFirst {
		file(buildDir).mkdirs()
		}
	
	main = 'com.google.gwt.dev.Compiler'
	classpath {
		[
		sourceSets.main.java.srcDirs, // Java source
		sourceSets.main.output.resourcesDir, // Generated resources
		sourceSets.main.output.classesDir, // Generated classes
		sourceSets.main.compileClasspath, // Deps
		]
	}
	args =
	[
	'de.coderebell.tts.app', // Your GWT module
	'-war', buildDir,
	'-logLevel', 'INFO',
	'-localWorkers', '2',
	'-compileReport',
	'-extra', extraDir
	]
	maxHeapSize = '256M'
}

war.dependsOn compileGwt

war {
     from "$buildDir/gwt"
     from "$buildDir/extra"
}

eclipse {
	project {
		natures 'com.google.gwt.eclipse.core.gwtNature'
		buildCommand 'com.google.gdt.eclipse.core.webAppProjectValidator'
		buildCommand 'com.google.gwt.eclipse.core.gwtProjectValidator'
	}
	classpath {
		containers 'com.google.gwt.eclipse.core.GWT_CONTAINER'
	}
}